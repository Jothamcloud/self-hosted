#!/bin/bash

# Configure logging
exec 1> >(logger -s -t $(basename $0)) 2>&1

log_info() {
    echo "[INFO] $1"
}

log_error() {
    echo "[ERROR] $1"
    return 1
}

log_warn() {
    echo "[WARN] $1"
}

# Change to the Ansible user home directory
cd /home/ansible || {
    log_error "Failed to change to /home/ansible directory"
    exit 1
}

log_info "Starting backup cleanup process"
log_info "Checking S3 bucket: {{ s3_bucket_name }}"

# Get bucket listing
bucket_listing=$(s3cmd -c /home/ansible/.s3cfg ls s3://{{ s3_bucket_name }}/) || {
    log_error "Failed to list S3 bucket contents"
    exit 1
}

# Initialize counters
total_files=0
deleted_files=0
retention_days=5

log_info "Scanning for backup files older than $retention_days days"

echo "$bucket_listing" | grep "sh_.*_[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}_" | while read -r line; do
    # Extract the date and filename from the s3cmd ls output
    createDate=$(echo "$line" | awk '{print $1}')
    fileName=$(echo "$line" | awk '{print $4}')
    
    # Convert dates to timestamp
    createTimestamp=$(date -d "$createDate" +%s 2>/dev/null)
    if [ $? -ne 0 ]; then
        log_error "Failed to parse date: $createDate for file: $fileName"
        continue
    }
    
    currentTimestamp=$(date +%s)
    
    # Calculate age in days
    ageInDays=$(( ($currentTimestamp - $createTimestamp) / 86400 ))
    
    ((total_files++))
    
    # If older than retention days, delete the object
    if [ $ageInDays -gt $retention_days ]; then
        log_info "Deleting backup: $fileName (Age: $ageInDays days)"
        if s3cmd -c /home/ansible/.s3cfg del "$fileName"; then
            ((deleted_files++))
            log_info "Successfully deleted: $fileName"
        else
            log_error "Failed to delete: $fileName"
        fi
    else
        log_info "Keeping backup: $fileName (Age: $ageInDays days)"
    fi
done

# Summary
log_info "Cleanup process completed"
log_info "Total files processed: $total_files"
log_info "Files deleted: $deleted_files"
log_info "Files retained: $(($total_files - $deleted_files))"